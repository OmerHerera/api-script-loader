---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Button from '../components/Button.astro';
import Select from '../components/Select.astro';
import { log } from 'astro/dist/core/logger/core';
---
<!-- function loadObjects() {
	console.log();
} -->
<Layout title="Welcome to Api-Assembly Scripts Loaders Tester">
	<main>
		<h1>Welcome to <span class="text-gradient">Script Loader for API-Assembly</span></h1>

		<p class="instructions">
			Add here Full URL where dynamic was generated by Api-Assembly, its will load and clone to DyExpsApi
				<input id="urlSectionId" type="text" placeholder="Insert URL Api-Assembly Result"/>
				<br />
				<Button
				text={"Click to load file"}
				buttonId="loadFullUrl"
				/>
      <input id="clone" type="text" placeholder="Cloned" style="display:none"/>
			<br />
			Add here Production SectionID
				<input id="sectionId" type="text" placeholder="Insert SectionId"/>
				<span class="text-gradient">it will load from cdn or cdn-eu</span><br />
				<label for="dyRegion">Choose Region:</label>
				<select name="dyRegion" id="dyRegion">
    			<option value="us">us</option>
    			<option value="eu">eu</option>
				</select>
				<Button
				buttonId="loadProdFile"
				text={"Click to load prod file"}
				/>
			<br />
			Choose key to compare <Select options={[]} />
			<Button
					buttonId="runCompare"
					text={"Run to Compare"}
			/>
		</p>

	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
